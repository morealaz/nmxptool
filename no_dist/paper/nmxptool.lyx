#LyX 1.5.3 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass elsart
\begin_preamble
\journal{Computers \& Geosciences}

\usepackage{url}
\end_preamble
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine natbib_authoryear
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
nmxptool: open-source and cross-platform software for Nanometrics seismic
 data acquisition
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thanksref{sourcesite}
\end_layout

\end_inset


\end_layout

\begin_layout Author
Matteo Quintiliani
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
corauthref{cor}
\end_layout

\end_inset


\end_layout

\begin_layout Author Email
quintiliani@ingv.it
\end_layout

\begin_layout Author Address
Istituto Nazionale di Geofisica e Vulcanologia, Via di Vigna Murata 605,
 00143 Roma, Italy
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thanksref{revision}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
The Nanometrics servers NaqsServer and DataServer can provide on-line access
 to seismic data and state-of-health information accepting TCP/IP connections
 and forwarding the requested data to each client program.
 NaqsServer collates and stores in near-real-time incoming data in ringbuffers
 whereas DataServer provides data of the past stored in NaqsServer ringbuffers.
 In order to implement the Nanometrics subscription protocols, the author
 developed a software consisting of a library called libnmxp and a tool
 called nmxptool.
 The library exposes a set of documented APIs which allow to communicate
 with the Nanometrics servers.
 The tool, based on libnmxp, allows to retrieve or monitor real-time data
 and data of the past.
 nmxptool can be used in three different ways: stand-alone to monitor data
 or save retrieved data in mini-seed records, launched as an Earthworm module
 to redirect data into the EW-rings or like a Seed-Link plug-in to feed
 the SL-server.
 The main contribute, as regards other similar software, is the capability
 to manage Raw Stream connections by buffering and sorting all received
 packets, included the retransmitted ones, guaranteeing a good compromise
 between data continuity and low latency.
 Besides, nmxptool allows to retrieve Data-On-Demand with minimum delay
 after request.
 Software is open-source and released under GNU Library General Public License.
 It has been written in C language using the GNU Build Tools (automake,
 autoconf and configure script) and taking in account the cross-platform
 compilation aspects, in fact, it can run on almost all the Unix-like operating
 systems, Mac OS X, Windows and either 32-bit or 64-bit architectures.
\end_layout

\begin_layout Abstract
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thanks[sourcesite]{Source code is available from 
\backslash
url{http://mednet.rm.ingv.it/nmxptool.php}} 
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thanks[revision]{
\backslash
small 
\backslash
itshape CVS $ $Revision: 1.23 $ $ -- $ $Date: 2008-06-17 13:56:15 $ $} 
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
corauth[cor]{Tel.: +39-06-51860671}
\end_layout

\end_inset

 
\end_layout

\begin_layout Keywords
Seismic data acquisition; software.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
A typical configuration of a seismic data flow from the seismic station,
 through Nanometrics servers, as far as the software clients is shown in
 figure 
\begin_inset LatexCommand ref
reference "fig:stationclients"

\end_inset

.
 The flow can be split in two logical parts:
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Seismic Station - Nanometrics Server
\series default
\emph default
: seismic data are converted in 
\emph on
NMXP
\emph default
 format and sent into UDP packets to the Nanometrics Servers.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Nanometrics Server - Client
\series default
\emph default
 : software client connect to the Nanometrics Servers for retrieving real-time
 and off-line data, instrument state-of-health and triggers.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /Users/mtheo/Desktop/cvswork/nmxptool/no_dist/paper/images/nanometrics_station_client.eps.gz
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Caption

\begin_layout Standard

\shape italic
Typical configuration of a seismic data flow from seismic stations, through
 Nanometrics Servers, as far as the client programs.
 In order to interact with NaqsServer or DataServer any client must implement
 the subscription protocols Private Data Stream or Data Access Protocol
 respectively.
 The most important difference between a NaqsServer and a DataServer is
 that the first one provides data in near-real-time whereas DataServer spreads
 archived data into the past.
 
\end_layout

\end_inset


\begin_inset LatexCommand label
name "fig:stationclients"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the context of this paper we are considering more the second part (right
 side), especially the software implementation aspects in the interaction
 of a software client with both NaqsServer and DataServer as well-documented
 into the manual 
\begin_inset LatexCommand cite
key "nanometrics"

\end_inset

.
 The kinds of connection and the related behaviours can be briefly schematized:
\end_layout

\begin_layout Itemize

\series bold
NaqsServer
\end_layout

\begin_deeper
\begin_layout Itemize
Data may be requested by channel.
 Real-time data can be retrieved in two different ways by the following
 streams:
\end_layout

\begin_deeper
\begin_layout Enumerate

\shape italic
Buffered Stream
\shape default
: short-term complete data stream.
 Packets are in chronological order but small gaps whenever a retransmission
 occurs.
\end_layout

\begin_layout Enumerate

\shape italic
Raw Stream
\shape default
: packets are forwarded in the original order.
 Packets may be missing, duplicated, or out of order, but minimal delay.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
DataServer
\end_layout

\begin_deeper
\begin_layout Itemize
Data may be requested by channel, start time and end time.
 Archived data are retrieved chronologically for each channel.
\end_layout

\end_deeper
\begin_layout Standard
Every client program that needs to communicate with NaqsServer or DataServer,
 as the software developed by the author, must implement the following subscript
ion protocols:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Private Data Stream
\series default
 version 1.4
\shape default
, subscription protocol to interact with a NaqsServer.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Data Access Protocol
\series default
 version 1.0
\shape default
, subscription protocol to interact with a DataServer.
 
\end_layout

\begin_layout Standard
Why developing a new software? Because both existing software 
\begin_inset LatexCommand citet
key "naqsplugin"

\end_inset

 and 
\begin_inset LatexCommand citet
key "naqs2ew"

\end_inset

 developed for redirecting data from NaqsServer into the SeedLink of 
\begin_inset LatexCommand citet
key "seiscomp"

\end_inset

 and Earthworm of 
\begin_inset LatexCommand citet
key "earthworm"

\end_inset

 respectively, can only use the 
\shape italic
Buffered Stream
\shape default
 without control of the retransmitted packet.
 Main problem when you connect to NaqServer by the short-term data stream
 is that you can get a gap for each retransmitted packet.
 On the contrary, using the 
\shape italic
Raw Stream
\shape default
, nmxptool is also able to receive retransmitted packets, manage and chronologic
ally order them in a buffer when is needed, that is when a retransmission
 occurs, and finally it can redirect data into the SeedLink or Earthworm
 system or repacket them in mini-SEED records.
\end_layout

\begin_layout Section
Development and features
\end_layout

\begin_layout Standard
nmxptool has been written in C language using the GNU Build Tools (automake,
 autoconf and configure script) and taking in account the cross-platform
 compilation aspects, in fact, it can run on almost all the Unix-like operating
 systems, Mac OS X, Windows and either 32-bit or 64-bit architectures as
 showned in table 
\begin_inset LatexCommand ref
reference "tab:architectures"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
\size scriptsize
Little Endian
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
\size scriptsize
Big Endian
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\size scriptsize
32-bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\size scriptsize
64-bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\size scriptsize
32-bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\size scriptsize
64-bit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\shape italic
\size scriptsize
Linux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\shape italic
\size scriptsize
Solaris
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\shape italic
\size scriptsize
Mac OS X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\shape italic
\size scriptsize
Free BSD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\shape italic
\size scriptsize
Windows-MinGW
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size scriptsize
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Caption

\begin_layout Standard

\emph on
Supported platforms: operating systems and architectures where nmxptool
 has been compiled with success.
\end_layout

\end_inset


\begin_inset LatexCommand label
name "tab:architectures"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to enable nmxptool for storing data in mini-SEED format, feeding
 SeedLink server or redirecting data into an Earthworm ring, some open-source
 software could be required, the respective software are libmseed, Seedlink
 and Earthworm.
 These software and their installation will be described in the next sections.
\end_layout

\begin_layout Standard
The main contribute produced by nmxptool, as regards other similar software,
 is the capability to manage Raw Stream connections by buffering and sorting
 all received packets, included the retransmitted ones, guaranteeing a good
 compromise between data continuity and low latency.
 Besides, nmxptool allows to retrieve Data-On-Demand from NaqsServer with
 minimum delay after request.
 Another important feature allows data continuity between program restarts,
 in fact, nmxptool can retrieve data of the past from the DataServer and
 joining it in near-real-time to the data that is flowing from the NaqsServer.
\end_layout

\begin_layout Standard
Main parameter to set for Raw Stream is the max tolerable latency you can
 accept, a sort of short-term-completion but managed by the client and not
 by the server.
 Figure 
\begin_inset LatexCommand ref
reference "fig:maxtolerablelatency"

\end_inset

.
 Moreover, for retrieving data-on-demand....
 Timeoutrecv....
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /Users/mtheo/Desktop/cvswork/nmxptool/no_dist/paper/images/nanometrics_gaps.eps.gz
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Caption

\begin_layout Standard

\shape italic
Raw stream management.
 Max tolerable latency.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset LatexCommand label
name "fig:maxtolerablelatency"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Source is subdivided in two main trunks, the first contains a library called
 libnmxp designed to provide APIs for interacting with the Nanometrics servers,
 the second one is nmxptool which relies on libnmxp.
\end_layout

\begin_layout Standard
Example of APIs call
\end_layout

\begin_layout Algorithm
Source code skeleton.
\end_layout

\begin_layout Algorithm
for i = 1 to 10; do
\end_layout

\begin_layout Algorithm
echo i
\end_layout

\begin_layout Algorithm
done
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Standard
You should be able to compile and install them everywhere you can launch
 the following standard commands:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

./configure --enable-FEATURE1 ...
 VAR1=...
 VAR2=...
\end_layout

\begin_layout Standard

make
\end_layout

\begin_layout Standard

make install
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The script configure automatically tries to compile all features, for disabling
 some features you can use the following options:
\end_layout

\begin_layout Description
--disable-libmseed disable saving data in mini-SEED records
\end_layout

\begin_layout Description
--disable-ew do not compile nmxptool as Earthworm module
\end_layout

\begin_layout Description
--disable-seedlink do not compile nmxptool as Seedlink plug-in
\end_layout

\begin_layout Standard
Some influential environment variables when you launch configure and compile
 nmxptool are:
\end_layout

\begin_layout Description
EW_HOME Earthworm home directory
\end_layout

\begin_layout Description
EW_VERSION Earthworm version directory
\end_layout

\begin_layout Description
EW_PARAMS Earthworm configuration files directory
\end_layout

\begin_layout Description
GLOBALFLAGS C compiler flags for Earthworm
\end_layout

\begin_layout Standard
It is possible to pass to the script configure the previous variables within
 command line, for example:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

./configure CFLAGS="-O2 -Wall -pipe -I/<anywhere>/libmseed" 
\backslash

\end_layout

\begin_layout Standard

  LDFLAGS="-L/<anywhere>/libmseed"
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another example show how enabling only the Earthworm feature, the script
 automatically adds 
\begin_inset Quotes eld
\end_inset

-I${EW_HOME}/${EW_VERSION}/include
\begin_inset Quotes erd
\end_inset

 to the environment variable CFLAGS:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

./configure --disable-libmseed --disable-seedlink 
\backslash

\end_layout

\begin_layout Standard

  CFLAGS="-O2 -Wall -pipe" 
\backslash

\end_layout

\begin_layout Standard

  EW_HOME="/home/ew" 
\backslash

\end_layout

\begin_layout Standard

  EW_VERSION="v7.2" 
\backslash

\end_layout

\begin_layout Standard

  EW_PARAMS="${EW_HOME}/${EW_VERSION}/params" 
\backslash

\end_layout

\begin_layout Standard

  GLOBALFLAGS="-D_SPARC -D_SOLARIS"
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following values of GLOBALFLAGS can be used for compiling nmxptool on
 different platforms, they have been taken from Earthworm distribution.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

GLOBALFLAGS="-m32 -Dlinux -D__i386 -D_LINUX -D_INTEL 
\backslash

\end_layout

\begin_layout Standard

            -D_USE_SCHED -D_USE_PTHREADS -D_USE_TERMIOS"
\end_layout

\begin_layout Standard

GLOBALFLAGS="-D_MACOSX -D_INTEL -D_USE_PTHREADS -D_USE_SCHED"
\end_layout

\begin_layout Standard

GLOBALFLAGS="-D_WINNT -D_INTEL -D_CRT_SECURE_NO_DEPRECATE 
\backslash

\end_layout

\begin_layout Standard

            -D_USE_32BIT_TIME_T"
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The last one has to be used to compile Earthworm feature under Windows-MinGW.
\end_layout

\begin_layout Standard
* Enable only libmseed and seedlink
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

./configure --disable-ew 
\backslash

\end_layout

\begin_layout Standard

  CFLAGS="-O2 -Wall -pipe -I/<anywhere>/libmseed" 
\backslash

\end_layout

\begin_layout Standard

  LDFLAGS="-L/<anywhere>/libmseed"
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Verifying the version and enabled features after compilation:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

src/nmxptool --version
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

nmxptool 1.2.2, Nanometrics tool
\end_layout

\begin_layout Standard

    Private Data Stream 1.4, Data Access Protocol 1.0
\end_layout

\begin_layout Standard

    Enabled features: libmseed YES, SeedLink YES, Earthworm YES.
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The optional libraries are briefly described in the following subsections.
\end_layout

\begin_layout Subsection
libmseed
\end_layout

\begin_layout Description
libmseed-2.1.4 or later, from 
\begin_inset ERT
status open

\begin_layout Standard


\backslash
url{http://www.iris.edu/manuals/}
\end_layout

\end_inset


\newline
The Mini-SEED library.
 A C library framework for manipulating and managing SEED data records.
 Author: Chad Trabant, IRIS DMC
\newline
It can be compiled on Unix-like operating
 systems, Mac OS X and Windows.
\end_layout

\begin_layout Standard
The Mini-SEED library - http://www.iris.edu/manuals/If available within include
 and library path, this library allows to save retrieved data in Mini-SEED
 records.
 You might add to CFLAGS this "-I/<anywhere>/libmseed" and to LDFLAGS this
 "-L/<anywhere>/libmseed", do not forget to run 'ranlib libmseed.a' or similars.
\end_layout

\begin_layout Subsection
ew
\end_layout

\begin_layout Description
Earthworm-6.2 or later, from 
\begin_inset ERT
status open

\begin_layout Standard


\backslash
url{http://www.isti2.com/ew/}
\end_layout

\end_inset


\newline
Seismic data processing system.
\newline
It can be compiled on Unix-like operating
 systems, Mac OS X and Windows.
\end_layout

\begin_layout Standard
Earthworm System - http://www.isti2.com/ew/ nmxptool is included into the
 official Earthworm distribution since the version 7.2.
 Anyway, you can compile nmxptool outside the EW distribution, for example,
 to upgrade.
 Before launching 'configure', run the appropriate script from directory
 'environment', the compilation depends on the following environment variables:
 $EW_HOME, $EW_VERSION, $EW_PARAMS and $GLOBALFLAGS.
 'configure' looks for necessary Earthworm object files inside $EW_HOME/$EW_VERS
ION/lib and link them to nmxptool in order to enable Earthworm module feature.
 If some of object files are missing then it will attempt to discover sources
 dependents on your operating system and it will compile them before linking.
\end_layout

\begin_layout Standard
Install binary and configuration files for Earthworm:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

make install-ew-conf ( # ONLY THE FIRST TIME # )
\end_layout

\begin_layout Standard

make install-ew-bin
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first command copies nmxptool binary in $EW_HOME/$EW_VERSION/bin The
 second command copies earthworm/nmxptool.d, earthworm/nmxptool.desc in $EW_PARAMS
 If you are upgrading nmxptool then you might do that:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

make install-ew-doc
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Last command copies nmxptool_ovr.html and nmxptool_cmd.html into the directories
\end_layout

\begin_layout Standard
$EW_HOME/$EW_VERSION/ewdoc/WEB_DOC/ovr
\end_layout

\begin_layout Standard
and
\end_layout

\begin_layout Standard
$EW_HOME/$EW_VERSION/ewdoc/WEB_DOC/cmd 
\end_layout

\begin_layout Subsection
SeedLink
\end_layout

\begin_layout Description
Seedlink-2.5 or later, from 
\begin_inset ERT
status open

\begin_layout Standard


\backslash
url{http://www.gfz-potsdam.de/geofon/seiscomp/}
\end_layout

\end_inset


\newline
Seedlink is a system for near real time seismic data distribution.
\newline
It can
 run mostly on Linux.
\end_layout

\begin_layout Standard
SeisComP - http://www.gfz-potsdam.de/geofon/seiscomp/ Seedlink is a system
 for near real time seismic data distribution.
 Inside the directory 'src' has been copied files 'seedlink_plugin.c' and
 'seedlink_plugin.h' from 'plugin.c' and 'plugin.h' belonging to the SeisComP
 2.5 distribution.
\end_layout

\begin_layout Standard
If your SeisComP root directory is not equal to /home/sysop/seiscomp, you
 have to launch the script 'configure' in the following way:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

./configure ...
 ...
 SEISCOMPDIR=/<where>/<seiscompdir>/<is>
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Install binary and template files for SeedLink:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

make install-seiscomp-templates ( # ONLY THE FIRST TIME # )
\end_layout

\begin_layout Standard

make install-seiscomp-bin
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first command copies nmxptool binary in %SEISCOMPDIR%/acquisition/bin
 The second command copies the directory seiscomp_templates/135_nmxptool
 in %SEISCOMPDIR%/acquisition/templates/source/
\end_layout

\begin_layout Standard
After, you can use:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

seiscomp config
\end_layout

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Usages
\end_layout

\begin_layout Standard
Figure 
\begin_inset LatexCommand ref
reference "fig:nmxptoolusages"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /Users/mtheo/Desktop/cvswork/nmxptool/no_dist/paper/images/nanometrics_nmxptool_usages.eps.gz
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Caption

\begin_layout Standard

\shape italic
Main nmxptool usages: Earthworm module, Seedlink plug-in, Stand-alone.
 Main options: -F, -A, -M, -T.
\end_layout

\end_inset


\begin_inset LatexCommand label
name "fig:nmxptoolusages"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Stand-alone
\end_layout

\begin_layout Subsection
Earthworm
\end_layout

\begin_layout Subsection
SeisComP
\end_layout

\begin_layout Section
Test
\end_layout

\begin_layout Standard
Test.
 Almost all packets are retrieved within 60 seconds.
 
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Itemize
Future.
\end_layout

\begin_deeper
\begin_layout Itemize
Maintenance, improvements, bug fixes
\end_layout

\begin_layout Itemize
Manage information about state-of-health, triggers and events.
\end_layout

\end_deeper
\begin_layout Acknowledgement
I would like to ...
\end_layout

\begin_layout Standard
\begin_inset LatexCommand bibtex
options "elsart-harv"
bibfiles "references"

\end_inset


\end_layout

\end_body
\end_document
