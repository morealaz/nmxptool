#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)

dnl Name your program here
m4_define([full_package_name], [nmxptool])

dnl These three define the plug-in version number
m4_define([major_version], [1])
m4_define([minor_version], [1])
m4_define([micro_version], [8])

m4_define([version],
	            [major_version.minor_version.micro_version])

m4_define([bug_report_address], [quintiliani@ingv.it])

# AC_INIT(FULL_PACKAGE_NAME, VERSION, BUG_REPORT_ADDRESS)
AC_INIT([full_package_name], [version], [bug_report_address])
AC_CONFIG_SRCDIR([src/nmxptool.c])
AC_CONFIG_HEADER([config.h])

#mtheo
# AM_INIT_AUTOMAKE(FULL_PACKAGE_NAME,VERSION)
AM_INIT_AUTOMAKE([full_package_name], [version])

NMXP_CFLAGS="-I`pwd`/libnmxp/src"
NMXP_LDFLAGS="-L`pwd`/libnmxp/src"

CFLAGS="$CFLAGS $NMXP_CFLAGS"
LDFLAGS="$LDFLAGS $NMXP_LDFLAGS"

# Checks for programs.
AC_PROG_CC

# Checks for libraries.
AC_CHECK_LIB(nsl,gethostent)
AC_SEARCH_LIBS(socket, socket, ,
	           [AC_CHECK_LIB(nsl, socket, LIBS="$LIBS -lsocket -lnsl", , -lsocket)])

AC_SEARCH_LIBS(rt, nanosleep, ,
	           [AC_CHECK_LIB(rt, nanosleep, LIBS="$LIBS -lrt", , -lrt)])

AC_SEARCH_LIBS(ws2_32, puts, ,
		[AC_CHECK_LIB(ws2_32, puts, LIBS="$LIBS -lws2_32", , -lws2_32)])

AC_ARG_WITH([libmseed],
	    [AS_HELP_STRING([--without-libmseed], [disable support for libmseed])],
	    [], 
	    [with_libmseed=yes]
) 

AC_ARG_WITH([ew],
	    [AS_HELP_STRING([--without-ew], [disable support for earthworm])],
	    [], 
	    [with_ew=yes]
) 

AC_ARG_WITH([seedlink],
	    [AS_HELP_STRING([--without-seedlink], [disable support for seedlink])],
	    [], 
	    [with_seedlink=yes]
) 

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([stdint.h stdlib.h string.h])
AC_CHECK_HEADERS([windows.h winsock2.h])

AS_IF([test "x$with_libmseed" != xno], 
      [AC_CHECK_LIB([mseed], [msr_init],
		    [LIBS="$LIBS -lmseed"
		     AC_DEFINE([HAVE_LIBMSEED], [1], [Define if you have libmseed]) 
		     AC_CHECK_LIB([nmxp], [nmxp_openSocket], [], [AC_MSG_ERROR([libnmxp not found!])]) 
		     AC_CHECK_LIB([nmxp], [nmxp_data_msr_pack],
				  [],
				  [AC_MSG_FAILURE([libmseed found but libnmxp does not support it. (Try --without-libmseed to disable)])])
		     ], 
		     [AC_MSG_WARN([
		      libmseed is not available (--without-libmseed to disable)
		     ])
		     AC_CHECK_LIB([nmxp], [nmxp_openSocket], [], [AC_MSG_ERROR([libnmxp not found or it supports libmseed
				   but libmseed is not available anymore! Try to recompile libnmxp!
				   ])]) 
				   ], 
				   )
      ],
      [
       AC_CHECK_LIB([nmxp], [nmxp_openSocket], [], [AC_MSG_ERROR([libnmxp not found or supports libmseed (--with-libmseed to enable)!])]) 
       AC_MSG_WARN([Mini-SEED support has been disabled!])
      ]
) 


EWOSOURCES=no

# Earthworm check.
AS_IF([test "x$with_ew" != xno], 
      [
    AS_IF([test "x$EW_HOME" != x], 
	  [
	   CFLAGS="$CFLAGS $GLOBALFLAGS"
	AC_CHECK_HEADERS([earthworm.h kom.h transport.h trace_buf.h],
			 [AC_DEFINE([HAVE_EARTHWORMFILES_H], [1], [Define if you have earthworm header file])],
			 AC_MSG_ERROR([Earthworm header files not found!])
			 )
	EWLIB=$EW_HOME/$EW_VERSION/lib
	EWOBJS="$EWLIB/kom.o $EWLIB/getutil.o $EWLIB/logit_mt.o $EWLIB/socket_ew_common.o $EWLIB/transport.o $EWLIB/sleep_ew.o $EWLIB/socket_ew.o $EWLIB/time_ew.o $EWLIB/threads_ew.o $EWLIB/sema_ew.o $EWLIB/swap.o $EWLIB/mem_circ_queue.o"
	AC_CHECK_FILES([$EWLIB/kom.o $EWLIB/getutil.o $EWLIB/logit_mt.o $EWLIB/socket_ew_common.o $EWLIB/transport.o $EWLIB/sleep_ew.o $EWLIB/socket_ew.o $EWLIB/time_ew.o $EWLIB/threads_ew.o $EWLIB/sema_ew.o $EWLIB/swap.o $EWLIB/mem_circ_queue.o],
		       [ ],
		       [
			AC_MSG_WARN(Earthworm object file is missing! Attempt to compile from source!)
			EWOSOURCES=yes
			]
		       )
	AC_DEFINE([HAVE_EARTHWORMOBJS], [1], [Define if you have all earthworm object files])
	AS_IF([test "x$EWOSOURCES" != xno],
	      [ 
		case "$OSTYPE" in
		solaris*)
		    EWOS=solaris
		;;
		darwin*)
		    EWOS=unix
		;;
		linux*)
		    EWOS=unix
		;;
		win32*)
		    EWOS=winnt
		;;
		msys*)
		    EWOS=winnt
		;;
		*)
		    EWOS=unix
		    AC_MSG_WARN(Unrecognised OS $OSTYPE)
		;;
		esac
		AC_MSG_WARN(EWOS set to $EWOS)
		AC_SUBST(EWOS)
		AC_SUBST(EW_HOME)
		AC_SUBST(EW_VERSION)
		AC_SUBST(EW_PARAMS)
	       ],
	      [
	       LIBS="$LIBS $EWOBJS"
	       ])
	],
	[AC_MSG_WARN([Earthworm files are not available (--without-ew to disable)])]
    )
    ],
    [AC_MSG_WARN([Earthworm support has been disabled!])]
)
AM_CONDITIONAL(WITHEWSOURCES, test x$EWOS != x)


# Checks for files.

# Seedlink check.
AS_IF([test "x$with_seedlink" != xno], 
      [
       AC_CHECK_FILES([./src/seedlink_plugin.c ./src/seedlink_plugin.h], [], AC_MSG_ERROR([seedlink plug-in sources not found!]))

       AS_IF([test "x$SEISCOMPDIR" == x],
	      [
	       SEISCOMPDIR=/home/sysop/seiscomp
	       ]
	      )
       AC_MSG_WARN([SEISCOMPDIR is set to ${SEISCOMPDIR}])
       AC_SUBST(SEISCOMPDIR)

       ],
    [AC_MSG_WARN([SeedLink support has been disabled!])]
)
AM_CONDITIONAL(WITHSEEDLINK, test x$with_seedlink != xno)


# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_INT32_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
AC_STRUCT_TM
AC_TYPE_UINT32_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([memset strdup])

AC_CONFIG_FILES([Makefile
                 src/Makefile])

# AC_CONFIG_SUBDIRS([libnmxp])

AC_OUTPUT

AC_MSG_NOTICE([
      Compile nmxptool using 'make'.
	  ])

